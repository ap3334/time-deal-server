# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

# push, PR 이벤트 발생시 아래의 브랜치들에서 발생하게 되는 경우 작업
on:
  push:
    branches:
      - 'feature/*'
  pull_request:
    branches:
      - 'develop'
      - 'feature/*'

# 실행해야 하는 작업들
jobs:
  CI:

    runs-on: ubuntu-latest

    # 작업 실행단계
    steps:
    # 체크아웃 및 JDK 세팅
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3800 # Optional, default value is 3306. The port of host
        container port: 3307 # Optional, default value is 3306. The port of container
        character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
        collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
        mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
        mysql database: 'some_test' # Optional, default value is "test". The specified database which will be create
        mysql root password: ${{ secrets.MYSQL_USERNAME }} # Required if "mysql user" is empty, default is empty. The root superuser password
        mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
        mysql password: ${{ secrets.MYSQL_PASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"

    # Gradle 권한 부여
    - name: Grant Execute permission for gradlew
      run: chmod +x gradlew
      shell: bash

    - uses: actions/checkout@v3
    - run: echo "${{ secrets.DATASOURCE_URL }}" > ./src/main/resources/application.properties
    - run: echo "${{ secrets.DATASOURCE_USERNAME }}" >> ./src/main/resources/application.properties
    - run: echo "${{ secrets.DATASOURCE_PASSWORD }}" >> ./src/main/resources/application.properties
    - run: echo "${{ secrets.DATASOURCE_DRIVER_CLASS_NAME }}" >> ./src/main/resources/application.properties
    - run: echo "spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect" >> ./src/main/resources/application.properties
    - run: echo "spring.jpa.show-sql=true" >> ./src/main/resources/application.properties
    - run: echo "spring.jpa.hibernate.ddl-auto=update" >> ./src/main/resources/application.properties
    - run: cat ./src/main/resources/application.properties

    # test하지 않고 빌드를 진행
    - name: Build with Gradle
      run: ./gradlew build -x test
      shell: bash
      
    # local환경으로 테스트 진행
    - name: Test with Gradle
      run: SPRING_PROFILES_ACTIVE=[local] ./gradlew clean test
      shell: bash
      


